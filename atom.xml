<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>祈梦星缘的Blog</title>
  
  <subtitle>Welcome</subtitle>
  <link href="https://yhzhao.cn/atom.xml" rel="self"/>
  
  <link href="https://yhzhao.cn/"/>
  <updated>2021-09-11T07:39:20.496Z</updated>
  <id>https://yhzhao.cn/</id>
  
  <author>
    <name>zhaoyonghui</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://yhzhao.cn/articles/16107.html"/>
    <id>https://yhzhao.cn/articles/16107.html</id>
    <published>2021-09-11T07:39:20.496Z</published>
    <updated>2021-09-11T07:39:20.496Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎光临<a href="https://yhzhao.cn/">祈梦星缘的Blog</a>! 这是本站的第一篇文章，在这篇文章中会手把手的教你搭建完成 ✅ 属于自己的blog空间。快跟随我开始吧！ </p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><p>我们的博客搭建是基于Hexo和Githup Pages来完成的。搭建完成后的资源部署到github.io上。同时可以给我们的博客来设置一个自己的访问域名。</p><h3 id="为什么使用-GitHub-Pages"><a href="#为什么使用-GitHub-Pages" class="headerlink" title="为什么使用 GitHub Pages"></a>为什么使用 GitHub Pages</h3><p>如果你想要搭建一个轻量级的个人博客服务，GitHub Pages 相较 WordPress 之类的建站服务有什么优势呢？</p><ul><li>首先他是完全免费的，相较其他的同类产品，他能替你省下一笔服务费，节约下的钱可以让你买一些其他的会员服务；</li><li>无须自己购买云服务进行搭建，只需按步骤一步步操作即可，即使你不懂他的技术细节；</li><li>支持的功能多，玩法丰富，你可以绑定你的域名、使用免费的 HTTPS、自己 DIY 网站的主题、使用他人开发好的插件等等；</li><li>当完成搭建后，你只需要专注于文章创作就可以了，其他诸如环境搭建、系统维护、文件存储的事情一概不用操心，都由 GitHub 处理</li></ul><p>当然了，作为一款免费的服务，我们也是要遵守 GitHub 官方使用建议和限制，在使用的时候项目和网站的大小不要超过 1GB，也不要过于频繁的更新网站的内容（每小时不超过 10 个版本），每个月的也要注意带宽使用上限为 100GB。</p><p>综合来看，GitHub Pages 依旧可以说是中小型博客或项目主页的最佳选项之一。</p><h3 id="一、准备Github账号和仓库"><a href="#一、准备Github账号和仓库" class="headerlink" title="一、准备Github账号和仓库"></a>一、准备Github账号和仓库</h3><p>首先你需要注册Github账号。并在个人主界面里选择创建一个新的 Repository。要注意的是仓库名称的格式形式必须是：<code>username.github.io</code>。</p><p><img src="http://image.yhzhao.cn/img20210911151737.png"></p><p>仓库创建完成之后转到Setting页面。找到 Pages 选项，选择一个 GitHub 官方提供的主题。选择完毕之后 GitHub Pages 就会自动帮你生成好网站，在他跳转的界面点击 Commit changes 按钮，网站就可以访问了。</p><p><img src="http://image.yhzhao.cn/img20210911151840.png"></p><h3 id="二、使用Hexo进行网站开发和部署"><a href="#二、使用Hexo进行网站开发和部署" class="headerlink" title="二、使用Hexo进行网站开发和部署"></a>二、使用Hexo进行网站开发和部署</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ol><li>首先要安装Node.js, 访问国内<a href="https://nodejs.org/en/">Nodejs</a>网站。下载后安装即可</li><li>安装hexo，打开终端输入命令<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i hexo-cli -g<span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org // 添加国内镜像源<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>后续可以使用<code>npm</code>安装各种插件。</li></ol><ol start="4"><li>初始化, 我这里用到的是Github上的一个开源主题：<a href="https://github.com/blinkfox/hexo-theme-matery">matery</a>。参照Readme一步步安装即可。</li></ol><h4 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new post <span class="token string">"article title"</span> // 新建一篇文章<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="本地调试"><a href="#本地调试" class="headerlink" title="本地调试"></a>本地调试</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo g // 生成静态资源hexo s // 启动服务，在 http//:localhost:4000/hexo clean // 清理生成的文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="推送"><a href="#推送" class="headerlink" title="推送"></a>推送</h4><p>将编译好的文件推送到github即可，但不建议直接推送。参考下一章的使用CI集成。</p><h3 id="三、使用CI集成工具"><a href="#三、使用CI集成工具" class="headerlink" title="三、使用CI集成工具"></a>三、使用CI集成工具</h3><p>每次写完一篇文章,都会手动执行hexo g和hexo d去生成静态网页后在进行部署到Github page上去。而且为了保存文章的源码md文件还需要push到对应的仓库分支上,比较麻烦。那么能不能只保存原md文件push上去,其他的操作都让它自动去完成呢 ？</p><p>答案肯定是可以的,下面就来讲解一下CI具体的实现方法:</p><p>首先来介绍利用的工具:<br><code>travis</code>: 是在线托管的CI服务,用Travis来进行持续集成,不需要自己搭服务器<a href="https://travis-ci.org/">官方网站</a></p><h4 id="接入Travis过程"><a href="#接入Travis过程" class="headerlink" title="接入Travis过程:"></a>接入Travis过程:</h4><ol><li>登录Travis网站用github授权登录</li><li>登录后在个人主页选择你需要CI的仓库</li><li>点击你选择的hexo博客的仓库进行配置。点击左上角红色框的More options按钮,选择Settings打开配置页面进行配置。第一个配置项:<code>Build only if .travis.yml is present</code>代表的意思是:只有在<code>.travis.yml</code>文件中配置的分支改变了才构建。第二个配置项:<code>Build pushes</code>代表当推送完这个分支后开始构建</li></ol><p><img src="http://image.yhzhao.cn/img20210911151951.png"></p><p>到了这一步,我们已经开启了要构建的仓库,但是还有个问题就是,构建完后,我们怎么将生成的文件推送到github上呢? 我们只要想github一push,他就自动构建并push静态文件到githubpages,那么下面要解决的就是Travis CI怎么访问github了</p><ol start="4"><li>在Travis CI配置Github的<code>Access Token</code> 用来访问Github。首先我们进入github的设置页面,然后点击<code>Developer settings</code>选项进入开发者设置,然后字点击<code>Personal access tokens</code><br><img src="http://image.yhzhao.cn/img20210911152129.png"></li></ol><p>点击右上角的<code>Generate new token</code>会让你输入密码确定,然后进入一个生成token的页面。输入token的描述,选择这个token权限,然后然后点击生成就可以了,然后复制保存下来,下次在进来就看不到了。</p><ol start="5"><li><p>在 Travis 仓库配置界面setting里面 环境变量<code>Environment Variables</code>进行配置token方便在构建文件中引用: 如下图<br><img src="http://image.yhzhao.cn/img20210911152229.png"></p></li><li><p>在博客的源码文件分支下添加<code>.travis,yml</code>配置文件,决定怎么执行构建任务,下面是.travis.yml的内容:</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">sudo: falselanguage: node_jsnode_js:  - 10 # use nodejs v10 LTScache: npmbranches:  only:    - master # build master branch onlyscript:  - hexo generate # generate static filesdeploy:  provider: pages  skip-cleanup: true  github-token: $GH_TOKEN  keep-history: true  on:    branch: master  local-dir: public<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>将 .travis.yml 推送到 repository 中。Travis CI 应该会自动开始运行，并将生成的文件推送到同一 repository 下的 gh-pages 分支下</p></li><li><p>在 GitHub 中前往你的 repository 的设置页面，修改 GitHub Pages 的部署分支为 <code>gh-pages</code>。<br><img src="http://image.yhzhao.cn/img20210911152323.png"></p></li></ol><h3 id="四、进阶玩法"><a href="#四、进阶玩法" class="headerlink" title="四、进阶玩法"></a>四、进阶玩法</h3><h4 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h4><p>前提，你得有一个域名，有些域名需要备案后才能用。</p><ol><li>在域名解析添加记录<br>如果你用你顶点域名（如：<code>baidu.cn</code>)，就添加一条主机记录为<code>@</code>的，如果你用www子域名（如：<code>www.baidu.cn</code>, 就添加一条主机记录为<code>www</code>的, github绑定自己的域名只支持这两种，不支持其他子域名。</li></ol><ul><li>记录类型一定要为 CNAME 这种类型，只有这样你的域名才能指向你的github</li><li>记录值填 <code>yourname.github.io</code><br><img src="http://image.yhzhao.cn/img20210911153236.png"></li></ul><ol start="2"><li>在github添加自定义域名<br><img src="http://image.yhzhao.cn/img20210911153111.png"></li><li>配置hexo的_config.yml。找到url设置，添加你的域名<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">url: http://www.baidu.cn // 这里替换下root: /permalink: :year/:month/:day/:title/permalink_defaults:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>上传CNAME文件<br>光执行上面三个步骤还是不够，每次你上传更新时，你在github设置的域名可能会丢失，所以要上传一个<code>CNAME</code>文件，让github记住你添加的域名：<br>先创建一个名为<code>CNAME</code>的文件，没有后缀，再在文件中写上你的域名（如：<code>www.baidu.cn</code>）,然后把这个文件放在<code>/source</code>目录下，上传就行了。</li></ol><h4 id="文章头设置"><a href="#文章头设置" class="headerlink" title="文章头设置"></a>文章头设置</h4><p>为了新建文章方便，建议将/scaffolds/post.md修改为如下代码：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token font-matter yaml language-yaml">title: {{ title }}date: {{ date }}top: falsecover: falsepassword:toc: truemathjax: truesummary:tags:categories:</span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样新建文章后不用你自己补充了，修改信息就行。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;欢迎光临&lt;a href=&quot;https://yhzhao.cn/&quot;&gt;祈梦星缘的Blog&lt;/a&gt;! 这是本站的第一篇文章，在这篇文章中会手把手的教你搭建完成 ✅ 属于自己的blog空间。快跟随我开始吧！ &lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Q</summary>
      
    
    
    
    <category term="踩坑记录" scheme="https://yhzhao.cn/categories/%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="建站" scheme="https://yhzhao.cn/tags/%E5%BB%BA%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>性能优化-应用分层</title>
    <link href="https://yhzhao.cn/articles/38173.html"/>
    <id>https://yhzhao.cn/articles/38173.html</id>
    <published>2021-09-10T01:10:04.000Z</published>
    <updated>2021-09-11T07:39:20.496Z</updated>
    
    
    
    
    <category term="工程实践" scheme="https://yhzhao.cn/categories/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="架构" scheme="https://yhzhao.cn/tags/%E6%9E%B6%E6%9E%84/"/>
    
    <category term="性能" scheme="https://yhzhao.cn/tags/%E6%80%A7%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>业务风控</title>
    <link href="https://yhzhao.cn/articles/43739.html"/>
    <id>https://yhzhao.cn/articles/43739.html</id>
    <published>2021-09-10T01:08:34.000Z</published>
    <updated>2021-09-11T07:39:20.496Z</updated>
    
    
    
    
    <category term="思考总结" scheme="https://yhzhao.cn/categories/%E6%80%9D%E8%80%83%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="风控" scheme="https://yhzhao.cn/tags/%E9%A3%8E%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>项目稳定性建设</title>
    <link href="https://yhzhao.cn/articles/4526.html"/>
    <id>https://yhzhao.cn/articles/4526.html</id>
    <published>2021-09-10T01:07:28.000Z</published>
    <updated>2021-09-11T07:39:20.496Z</updated>
    
    
    
    
    <category term="工程实践" scheme="https://yhzhao.cn/categories/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="分布式" scheme="https://yhzhao.cn/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    <category term="架构" scheme="https://yhzhao.cn/tags/%E6%9E%B6%E6%9E%84/"/>
    
    <category term="稳定性" scheme="https://yhzhao.cn/tags/%E7%A8%B3%E5%AE%9A%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>分布式限流</title>
    <link href="https://yhzhao.cn/articles/60589.html"/>
    <id>https://yhzhao.cn/articles/60589.html</id>
    <published>2021-09-10T00:48:15.000Z</published>
    <updated>2021-09-11T07:39:20.496Z</updated>
    
    
    
    
    <category term="工程实践" scheme="https://yhzhao.cn/categories/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="分布式" scheme="https://yhzhao.cn/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Go GC 垃圾回收</title>
    <link href="https://yhzhao.cn/articles/40153.html"/>
    <id>https://yhzhao.cn/articles/40153.html</id>
    <published>2021-09-10T00:48:03.000Z</published>
    <updated>2021-09-11T07:39:20.496Z</updated>
    
    
    
    
    <category term="计算机语言" scheme="https://yhzhao.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="GC" scheme="https://yhzhao.cn/tags/GC/"/>
    
    <category term="垃圾回收" scheme="https://yhzhao.cn/tags/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/"/>
    
    <category term="Go" scheme="https://yhzhao.cn/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>分布式系统原理</title>
    <link href="https://yhzhao.cn/articles/40164.html"/>
    <id>https://yhzhao.cn/articles/40164.html</id>
    <published>2021-09-10T00:47:33.000Z</published>
    <updated>2021-09-11T07:39:20.496Z</updated>
    
    
    
    
    <category term="读书笔记" scheme="https://yhzhao.cn/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="分布式" scheme="https://yhzhao.cn/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>大型网站技术架构</title>
    <link href="https://yhzhao.cn/articles/12189.html"/>
    <id>https://yhzhao.cn/articles/12189.html</id>
    <published>2021-09-10T00:46:38.000Z</published>
    <updated>2021-09-11T07:39:20.496Z</updated>
    
    
    
    
    <category term="读书笔记" scheme="https://yhzhao.cn/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="架构" scheme="https://yhzhao.cn/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>博弈论1-发展历史</title>
    <link href="https://yhzhao.cn/articles/60737.html"/>
    <id>https://yhzhao.cn/articles/60737.html</id>
    <published>2021-09-10T00:46:11.000Z</published>
    <updated>2021-09-11T07:39:20.496Z</updated>
    
    
    
    
    <category term="课程笔记" scheme="https://yhzhao.cn/categories/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="博弈论" scheme="https://yhzhao.cn/tags/%E5%8D%9A%E5%BC%88%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>Python SDK 打包</title>
    <link href="https://yhzhao.cn/articles/4435.html"/>
    <id>https://yhzhao.cn/articles/4435.html</id>
    <published>2021-09-10T00:45:18.000Z</published>
    <updated>2021-09-11T07:39:20.496Z</updated>
    
    
    
    
    <category term="计算机语言" scheme="https://yhzhao.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="Python" scheme="https://yhzhao.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Sql之花式Join</title>
    <link href="https://yhzhao.cn/articles/31061.html"/>
    <id>https://yhzhao.cn/articles/31061.html</id>
    <published>2021-09-07T22:53:22.000Z</published>
    <updated>2021-09-11T07:39:20.496Z</updated>
    
    
    
    
    <category term="工程实践" scheme="https://yhzhao.cn/categories/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="sql" scheme="https://yhzhao.cn/tags/sql/"/>
    
    <category term="数据库" scheme="https://yhzhao.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
</feed>
